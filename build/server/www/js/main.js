var config={},server={},iconSize=20,gridSize=38.5,mortalityRes=gridSize/3,session=void 0,locationUpdateRate=5,allies=[],recent=[],locations={},$sessioninfo=$("#sessioninfo"),$friends=$("#friends"),$allieslist=$("#allieslist"),$recentlist=$("#recentlist"),$buildings=$("#buildings"),$landmarks=$("#landmarks"),$grid=$("#grid"),$mortality=$("#mortality"),$layers=$("#map .layer"),mortalityMap=h337.create({container:document.getElementById("mortality"),minOpacity:0,maxOpacity:.2,radius:2*mortalityRes});
function updateStatus(c){console.log("updating status ...");$.getJSON("/status.json",function(a){server=a;$("#hostname").text(server.hostname);$("#level").text(_(server.level)).prop("title",_("Worldsize {WORLDSIZE}, Seed {SEED}",{WORLDSIZE:server.worldsize,SEED:server.seed}));$("#numplayers").text(_("{NUM} / {MAX} players",{NUM:server.numplayers,MAX:server.maxplayers}));$("#numsleepers").text(_("{NUM} sleepers",{NUM:server.sleepers}));document.title=server.hostname;console.log("status updated");c&&
c()}).fail(function(a,b){console.log("status update failed: "+b.message)})}
function updateMonuments(c){console.log("updating monuments ...");$.getJSON("/monuments.json",function(a){$.each(a,function(b,a){var c,f;/wolf_monument/.test(a.name)?(c="/img/wolf.png",f=_("Wolf Monument")):/lighthouse_monument/.test(a.name)?(c="/img/lighthouse.png",f=_("Lighthouse")):/dish_monument/.test(a.name)?(c="/img/dish.png",f=_("Satellite Dish")):/cave/.test(a.name)?(c="/img/cave.png",f=_("Cave")):/radtown/.test(a.name)&&(c="/img/radtown.png",f=_("Radtown"));c&&(elem=$('<img class="monument" src="'+
c+'" alt="" title="'+f+'" />'),c=worldToMap(a.position),elem.css({width:iconSize+"px",left:c.x-iconSize/2+"px",top:c.y-iconSize/2+"px"}),$landmarks.append(elem))});console.log("monuments updated");c&&c()}).fail(function(a,b){console.log("monuments update failed: "+b.message)})}
function updateBuildings(c){console.log("updating buildings ...");$.getJSON("/buildings.json",function(a){var b=document.getElementById("buildings"),e=b.getContext("2d");e.clearRect(0,0,b.width,b.height);var d=server.worldsize/1E3*.4;$.each(a,function(a,b){if("foundation"==b.name){var c=worldToMap(b.position);e.save();e.moveTo(c.x,c.y);e.translate(c.x,c.y);e.rotate(b.rotation/180*Math.PI);e.fillStyle="rgba(0,0,0,0.5)";e.fillRect(-d/2-.5,-d/2-.5,d+1,d+1);e.restore()}});$.each(a,function(b,a){if("foundation"==
a.name){var c=worldToMap(a.position);e.save();e.moveTo(c.x,c.y);e.translate(c.x,c.y);e.rotate(a.rotation/180*Math.PI);e.fillStyle="#ae8753";e.fillRect(-d/2,-d/2,d,d);e.restore()}});console.log("buildings updated");c&&c(null)}).fail(function(a,b){console.log("buildings update failed: "+b.message);c&&c(b)})}
function updateMortality(){console.log("updating mortality ...");$.getJSON("/deaths.json",function(c){var a=[],b={},e;$.each(c,function(c,d){var g=worldToMap(d),h=g.x/mortalityRes|0,g=g.y/mortalityRes|0;a.push({x:h*mortalityRes,y:g*mortalityRes,value:1});e=h+","+g;"undefined"===typeof b[e]?b[e]=1:b[e]++});var d=1;$.each(b,function(a,b){b>d&&(d=b)});mortalityMap.setData({max:d,data:a});console.log("mortality updated: max="+d)}).fail(function(c,a){console.log("mortality update failed: "+a.message)})}
function updatePlayerLocation(c,a){var b,e=worldToMap(c),d=c.r;locations.hasOwnProperty(c.id)?(b=locations[c.id],b.pos=[b.pos[1],e],b.rot=[b.rot[1],d]):((b=findRecent(c.id))||"string"!==typeof c.name||c.name==c.id||(b=addRecent(c.id,c.name)),console.log("creating player "+c.id),$landmarks.append(elem=$('<img class="player" alt="" id="player-'+c.id+'" />')),elem.prop("title",userId===c.id?_("This is you!"):b?b.name:c.id),elem.prop("src","/img/player.png"),elem.css({width:iconSize+"px",left:e.x-iconSize/
2+"px",top:e.y-iconSize/2+"px",transform:"rotate("+d+"deg)"}),b=locations[c.id]={},b.id=c.id,b.pos=[e,e],b.rot=[d,d],b.elem=elem,b.dead=!1,b.update=function(){this.dead||this.sleeping?this.elem.css({transform:"rotate(0deg)",zIndex:this.dead?101:100}):this.elem.css({zIndex:userId==c.id?103:102});var b;b=this.dead?"/img/dead.png":this.sleeping?isShare(this.id)?"/img/sleeper-ally.png":"/img/sleeper.png":userId==this.id?"/img/self.png":isShare(this.id)?"/img/ally.png":"/img/player.png";this.elem.prop("src")!=
b&&this.elem.prop("src",b)}.bind(b));b.sleeping=!!a;b.time=Date.now();b.update()}function findAlly(c){for(var a=0;a<allies.length;++a)if(allies[a].id==c)return allies[a];return null}function isFriend(c){if(!session)return!1;for(var a=0;a<session.friends.length;++a)if(session.friends[a].id==c)return!0;return!1}function isShare(c){if(!session)return!1;for(var a=0;a<session.shares.length;++a)if(session.shares[a].id==c)return!0;return!1}
function addFriend(c,a){findAlly(c);connect.socket&&!isFriend(c)&&c!=session.id&&confirm(_('Do you really want to SHARE your location with "{NAME}"?',{NAME:a}))&&(console.log("requesting add of friend "+c),connect.socket.send("friend.add "+JSON.stringify({id:c})))}
function deleteFriend(c,a){findAlly(c);connect.socket&&isFriend(c)&&confirm(_('Do you really want to NO LONGER SHARE your location with "{NAME}"?',{NAME:a}))&&(console.log("requesting delete of friend "+c),connect.socket.send("friend.del "+JSON.stringify({id:c})))}
function deleteForeignFriend(c,a){findAlly(c);connect.socket&&(isFriend(c)||isAlly(c))&&confirm(_('Do you really want to MUTUALLY DELETE your connection to "{NAME}"?',{NAME:a}))&&(console.log("requesting delete of foreign friend "+c),connect.socket.send("foreign.del "+JSON.stringify({id:c})))}
function updateAllies(){if(session){for(var c=[],a=0;a<allies.length;)isFriend(allies[a].id)||isShare(allies[a].id)?++a:(console.log("clearing ally: "+allies[a].id),$("#ally-"+allies[a].id).remove(),allies.splice(a,1));a=session.friends.slice();Array.prototype.push.apply(a,session.shares);$.each(a,function(b,a){if(!(0<=c.indexOf(a.id))){var d=findAlly(a.id);if(null==d){console.log("creating ally: "+a.id);d={};d.id=a.id;d.name=a.name;allies.push(d);d.elem=$('<a id="ally-'+d.id+'" class="player" />');
d.elem.text(d.name);d.elem.click(function(){isFriend(d.id)?deleteFriend(d.id,d.name):addFriend(d.id,d.name);return!1});d.elem.append($('<img class="icon" src="/img/revoke.png" />').click(function(a){deleteForeignFriend(d.id,d.name);a.stopPropagation();return!1}));var f=null;for(b in allies)if(allies.hasOwnProperty(b)&&allies[b].name.toLowerCase()>d.name.toLowerCase()){f=allies[b].elem;break}null!=f?d.elem.insertBefore(f):$allieslist.append(d.elem)}(d.isFriend=isFriend(a.id))?d.elem.addClass("friend"):
d.elem.removeClass("friend");(d.isShare=isShare(a.id))?d.elem.addClass("share"):d.elem.removeClass("share");(d.isMutual=d.isFriend&&d.isShare)?d.elem.addClass("mutual"):d.elem.removeClass("mutual");c.push(a.id)}})}}function findRecent(c){for(var a=0;a<recent.length;++a)if(recent[a].id==c)return recent[a];return null}
function addRecent(c,a){if(!session||session.id!=c){var b=findRecent(c);null==b&&(b={},b.id=c,b.name=a,recent.push(b));b.elem||(b.elem=$('<a id="recent-'+b.id+'" class="player "/>'),b.elem.text(b.name),b.elem.click(function(){addFriend(b.id,b.name);return!1}),$recentlist.append(b.elem));if(b.id!=session.id){var e=locations[b.id];e&&e.elem.prop("title",b.name)}return b}}
function updateRecent(){console.log("updating recent players ...");$.getJSON("/recent.json",function(c){$.each(c,function(a,b){addRecent(b.id,b.name)});console.log("updated recent players")}).fail(function(c,a){console.log("recent players update failed: "+a.message)})}
setInterval(function(){var c=Date.now();$.each(locations,function(a,b){var e=(c-b.time)/1E3;1<e&&(e=1);b.pos[1]!=b.pos[0]&&(e=lerp(b.pos[0],b.pos[1],e),b.elem.css({left:e.x-iconSize/2+"px",top:e.y-iconSize/2+"px"}));b.dead||b.sleeping||b.elem.css({transform:"rotate("+b.rot[1]+"deg)"})})},1E3/locationUpdateRate);var labelsX="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),labelsY=function(){for(var c=[],a=1;a<=labelsX.length;++a)c.push(""+a);return c}();
function updateGrid(){var c=document.getElementById("grid"),a=c.getContext("2d");a.clearRect(0,0,c.width,c.height);a.save();a.beginPath();for(c=gridSize;1E3>c;c+=gridSize)a.moveTo(c-.5,.5),a.lineTo(c-.5,999.5),a.moveTo(.5,c-.5),a.lineTo(999.5,c-.5);a.strokeStyle="rgba(255,255,255,0.08)";a.stroke();a.fillStyle="rgba(255,255,255,0.5)";a.font="18px sans-serif";for(var b=c=0;1E3>c;c+=gridSize,b++){var e=labelsY[b],d=labelsX[b],f=a.measureText(e);a.fillText(e,1E3+(gridSize-f.width)/2,c+18+(gridSize-18)/
2-4);f=a.measureText(d);a.fillText(d,c+(gridSize-f.width)/2,1029)}a.restore()}
function connect(){if("undefined"==typeof WebSocket)alert(_("Sorry, your browser does not support WebSockets. Please consider an upgrade to use RustWeb!"));else{console.log("connecting to websocket ...");var c=connect.socket=new WebSocket("ws://"+document.location.hostname+":"+document.location.port+"/ws");c.onopen=function(){console.log("connected to websocket")};c.onmessage=function(a){var b=a.data,e=b.indexOf(" ");0>e?(a=b,b=null):(a=b.substring(0,e),b=JSON.parse(b.substring(e+1)));switch(a){case "hello":console.log("greeted by server");
c.send("hello");break;case "session":console.log("received session info: "+b._id);b.name||(b.name=findRecent(b.id));session=b;userId=b.id;toggleCss("signedin",!0);toggleCss("owner",session.owner);$sessioninfo.text(session.name?session.name:_("You"));notify(_("{YOU} just signed in",{YOU:"<strong>"+_("You")+"</strong>"}));updateAllies();updateRecent();session.owner&&(config.displayBuildings||(toggleCss("displayBuildings",!0),updateBuildings(),setInterval(updateBuildings,3E5)),config.displayMortality||
(toggleCss("displayMortality",!0),updateMortality(),setInterval(updateMortality,3E5)));break;case "friend.add":console.log("received added friend: "+b.id);session.friends.push(b);updateAllies();notify(_("{YOU} now share your location with {NAME}",{YOU:"<strong>"+_("You")+"</strong>",NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));break;case "friend.del":console.log("received deleted friend: "+b.id);for(a=0;a<session.friends.length;++a)if(session.friends[a].id==b.id){session.friends.splice(a,1);
updateAllies();notify(_("{YOU} no longer share your location with {NAME}",{YOU:"<strong>"+_("You")+"</strong>",NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));break}break;case "share.add":console.log("received added share: "+b.id);session.shares.push(b);updateAllies();notify(_("{NAME} now shares their location with you",{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));(a=locations[b.id])&&a.elem.prop("src","/img/ally.png");break;case "share.del":console.log("received deleted share: "+b.id);for(a=
0;a<session.shares.length;++a)if(session.shares[a].id==b.id){session.shares.splice(a,1);updateAllies();if(a=locations[b.id])a.elem.remove(),delete locations[b.id];notify(_("{NAME} no longer shares their location with you",{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));break}break;case "l":updatePlayerLocation(b,!1);break;case "s":updatePlayerLocation(b,!0);break;case "player.connect":console.log("received player connect: "+b.id);session.owner&&notify(_("{NAME} just woke up",{NAME:"<strong>"+escapeHtml(b.name)+
"</strong>"}));$recentlist.prepend(addRecent(b.id,b.name).elem.detach());break;case "player.disconnect":console.log("received player disconnect: "+b.id);session.owner&&notify(_("{NAME} fell asleep",{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));if(a=locations[b.id])a.dead||(a.sleeping=!0),a.update();break;case "player.chat":console.log("received player spawn: "+b.id);notify(_("{NAME} says:",{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"})+" "+escapeHtml(b.message));break;case "player.spawn":console.log("received player spawn: "+
b.id);notify(_("{NAME} spawned in the middle of nowhere",{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));if(a=locations[b.id])a.dead=!1,a.sleeping=!1,a.update();break;case "player.death":console.log("received player death: "+b.id);notify(_(damageToReason(b.lastDamage),{NAME:"<strong>"+escapeHtml(b.name)+"</strong>"}));if(a=locations[b.id])a.dead=!0,a.sleeping=!1,a.update();break;default:console.log("received unknown command: "+a)}};c.onclose=function(a){console.log("disconnected from websocket (trying to reconnect in 20s)");
setTimeout(function(){connect()},2E4);toggleCss("signedin",!1);toggleCss("owner",!1);$sessionfinfo.text("Not logged in");delete connect.socket;cleanup()};c.onerror=function(a){console.log("websocket error: "+a.error)}}}
function init(){toggleCss("displayMonuments",!!config.displayMonuments);toggleCss("displayBuildings",!!config.displayBuildings);toggleCss("displayMortality",!!config.displayMortality);updateStatus(function(){setInterval(updateStatus,6E4);connect();config.displayMonuments&&updateMonuments();config.displayBuildings&&(updateBuildings(),setInterval(updateBuildings,3E5));config.displayMortality&&(updateMortality(),setInterval(updateMortality,3E5))})}
$(document).ready(function(){console.log("initializing ...");toggleCss("signedin",!1);toggleCss("owner",!1);updateGrid();var c=$("#landmarks-checkbox");c.change(function(){$landmarks.css("display",c.is(":checked")?"block":"none")});var a=$("#buildings-checkbox");a.change(function(){$buildings.css("display",a.is(":checked")?"block":"none")});var b=$("#mortality-checkbox");b.change(function(){$mortality.css("display",b.is(":checked")?"block":"none")});var e=$("#grid-checkbox");e.change(function(){$grid.css("display",
e.is(":checked")?"block":"none")});$layers.bind("mousemove",function(a){1E3<a.offsetX||1E3<a.offsetY||(a=mapToWorld({x:a.offsetX,y:a.offsetY}),$(this).prop("title",Math.round(a.x)+" / "+Math.round(a.z)))});$("#allieslist, #recentlist").bind("mousewheel DOMMouseScroll",function(a){var b;"mousewheel"==a.type?b=-1*a.originalEvent.wheelDelta:"DOMMouseScroll"==a.type&&(b=20*a.originalEvent.detail);if(b)return a.stopPropagation(),a.preventDefault(),$(this).scrollTop(b+$(this).scrollTop()),!1});var d=$("#recent-filter");
d.bind("change keyup",function(a){var b=d.val().toLowerCase();0==b.length?$recentlist.find(".player").show():$recentlist.find(".player").each(function(a,c){c=$(c);0<=c.text().toLowerCase().indexOf(b)?c.show():c.hide()})});$mortality.css({position:"absolute"});var f=null;$("#openconsole").click(function(a){f?f.focus():(f=window.open("/console/","_blank","width=800,height=600,status=0,toolbar=0,menubar=0,scrollbars=0,location=0"),f.onbeforeunload=function(){f=null});a.preventDefault();return!1});console.log("loading config ...");
$.getJSON("/config.json",function(a){config=a||{};console.log("config loaded");console.log("loading languages ...");var b=$("#langselect");b.change(function(){$.cookie("lang",b.val());document.location.href=document.location.href});$.getJSON("/languages.json",function(a){var c=[];b.empty();$.each(a,function(a,d){c.push(d.name+" ("+d.code+")");b.append($('<option value="'+d.code+'" />').text(d.name+" ["+d.code+"]"))});b.val("en");console.log("languages loaded: "+c.join(", "));i18n.languages=a;var d=
$.cookie("lang")||config.defaultLanguage;d&&"en"!=d?i18n.load(d,function(a){a||b.val(d);init()}):init()}).fail(function(a,b){console.log("loading languages failed:",b);init()})}).fail(function(a,b){console.log("loading config failed:",b)});onResize()});function cleanup(){$.each(allies,function(c,a){a.elem.remove()});$.each(recent,function(c,a){a.elem.remove()});$.each(locations,function(c,a){a.elem.remove()});session=null;allies=[];recent=[];locations={}}
function onResize(){var c=($(window).height()-250)/2;$allieslist.css("max-height",c+"px");$recentlist.css("max-height",c+"px")}$(window).resize(onResize);
